{
	"#inc": {
		"prefix": "#inc",
		"body": [
			"#include "
		],
		"description": ""
	},

	"using":{
		"prefix":"using",
		"body":[
			"using namespace $0"
		],
		"description": "snippet for using namespace"
	},

	"for": {
		"prefix": "for",
		"body": [
			"for (int ${1} = ${2:0}; ${1} < ${3:length}; ${1}++)",
			"{",
			"\t$0",
			"}\n"
		],
		"description": "snippet for 'for' loop"
	},
	

	"foreach":{
		"prefix":"fore",
		"body":[
			"for (auto &$1 : $2)",
			"{",
			"\t$0",
			"}\n"
		],
		"description": "snippet for 'for' auto"
	},
	
	"do": {
		"prefix": "do",
		"body": 
		[
			"do",
			"{",
			"\t$0",
			"} while($1);\n"
		],
		"description": "snippet for do...while loop"
	},

	"while": {
		"prefix": "while",
		"body": [
			"while ($1)",
			"{",
			"\t$0",
			"}\n"
		],
		"description": ""
	},

	"if": {
		"prefix": "if",
		"body": [
			"if ($1)",
			"{",
			"\t$0",
			"}"
		],
		"description": "snippet for if  "
	},

	"else": {
		"prefix": "else",
		"body": [
			"else",
			"{",
			"\t$0",
			"}\n"
		],
		"description": "snippet for else"
	},

	"else if": {
		"prefix": "else if",
		"body": [
			"else if ($1)",
			"{",
			"\t$0",
			"}"
		],
		"description": "snippet for else-if"
	},

	"enum": {
		"prefix": "enum",
		"body": [
			"enum $1",
			"{",
			"\t$0",
			"};\n"
		],
		"description": "snippet for enum"
	},

	"class": {
		"prefix": "class",
		"body": [
			"class $0",
			"{",	
			"",
			"};\n"
		],
		"description": "snippet for class"
	},

	"class inherit": {
		"prefix": "classi",
		"body": [
			"class $1 :public $0",
			"{",	
			"",
			"};\n"
		],
		"description": "snippet for class inherit"
	},


	"namespace": {
		"prefix": "namespace",
		"body": [
			"namespace $1",
			"{",
			"\t$0",
			"}//$1\n"
		]
	},

	
	"#ifndef": {
		"prefix": "#ifndef",
		"body": [
			"#ifndef __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__",
			"#define __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__",
			"$0",
			"#endif  //!__${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__"
		],
		"description": "snippet for #ifndef"
	},


	"#ifdef": {
		"prefix": "#ifdef",
		"body": [
			"#ifdef  ${1}",
			"$0",
			"#endif  //$1"
		],
		"description": "snippet for #if"
	},

	"struct": {
		"prefix": "struct",
		"body": [
			"struct $1",
			"{",
			"\t$0",
			"};\n"
		],
		"description": "snippet for struct"
	},

	"switch": {
		"prefix": "switch",
		"body": [
			"switch ($1)",
			"{",
			"  case $2:",
			"\t$0",
			"\tbreak;",
			"\n",
			"\n",
			"  default:",
			"\tbreak;",
			"}"
		],
		"description": "snippet for switch  "
	},

	"case":{
		"prefix":"case",
		"body":[
			"  case $1:",
			"\t$0",
			"\tbreak;"
		],
		"description": "snippet for case (...)"
	},

	"try": {
		"prefix": "try",
		"body": [
			"try",
			"{",
			"\t$1",
			"}",
			"catch (const std::exception& $2)",
			"{",
			"\t$0",
			"}\n"
		],
		"description": "snippet for try catch"
	},
	
	"union": {
		"prefix": "union",
		"body": 
		[
			"union $1",
			"{",
			"\t$0",
			"};\n"
		],
		"description": "snippet for union"
	},

	"#def": {
		"prefix": "#def",
		"body": [
			"#define  $1  $2\n"
			],
		"description": ""
	},

	"main": {
        "prefix": "main",
        "body": [
			"int\tmain(int argc, char **argv)",
			"{",
            "\t$0",
            
			"\n",
			"\tsystem(\"pause\");",
			"\treturn 0;",
			"}\n"
        ],
        "description": "create a main function"
	},

	"fileheader": {
		"prefix": "fileheader",
		"body": [
			"/**",
			"**********************************************************************************************************************************************************************************************************************************",
			"* @file:\t$TM_FILENAME",
			"* @author:\t$1",
			"* @date:\t$CURRENT_YEAR年$CURRENT_MONTH月$CURRENT_DATE日 $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND $CURRENT_DAY_NAME",
			"* @brief:\t$2",
			"**********************************************************************************************************************************************************************************************************************************",
			"**/"
		],
		"description": "create a file header"
	},


	"template":{
		"prefix":"tem",
		"body":[
			"template <typename $0>"
		],
		"description": "template snippet"
	}
}

